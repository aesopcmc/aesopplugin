<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>aesopplugin</artifactId>
        <groupId>top.mcos</groupId>
        <version>${global.version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>Build</artifactId>

    <dependencies>
        <dependency>
            <groupId>top.mcos</groupId>
            <artifactId>Core</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>top.mcos.databas</groupId>
            <artifactId>Database</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>top.mcos.nms.provided</groupId>
            <artifactId>R1_19_R3</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.name}-${global.version}</finalName>
        <resources>
            <!--仅针对当前模块生效，如果他模块也需要，则具体模块再配置一次-->
            <!--filtering： MAVEN提供了一种过滤机制，这种机制能够在资源文件被复制到目标目录的同时，当filtering = true时替换资源文件中的占位符；当filtering = false时不进行占位符的替换。-->
            <!--下面将"src/main/java"目录下的所有的.yml文件进行打包，并替换所有的.yml文件中的占位符。 例如让plugin.yml里的${global.version}配置自动获取值-->
            <!--注意：一旦配置了resource，就会替代默认机制，每个资源文件都要指定，否则打包后无法包含进jar包中-->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <!--effectlib 开始-->
                <!--<configuration>
                    <minimizeJar>false</minimizeJar>
                    <dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation>
                    <relocations>
                        &lt;!&ndash; Other relocations can go here, e.g. bstats &ndash;&gt;
                        <relocation>
                            <pattern>de.slikey</pattern>
                            <shadedPattern>my.own.plugin.namespace.slikey</shadedPattern>
                        </relocation>
                    </relocations>
                    <filters>
                        <filter>
                            <artifact>com.elmakers.mine.bukkit:EffectLib</artifact>
                            <excludes>
                                <exclude>plugin.yml</exclude>
                                <exclude>META-INF/MANIFEST.MF</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>-->
                <!--effectlib 结束-->

                <configuration>
                    <!--custom-block-data-->
                    <!--<relocations>
                        <relocation>
                            <pattern>com.jeff_media.customblockdata</pattern>
                            <shadedPattern>YOUR.PACKAGE.NAME.customblockdata</shadedPattern>
                        </relocation>
                    </relocations>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>